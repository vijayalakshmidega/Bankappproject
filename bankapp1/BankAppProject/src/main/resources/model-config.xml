<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">


<context:component-scan base-package="com.bankapp.model"/>
<context:property-placeholder location="classpath:db.properties"/>
<!-- it force to convert all db related error to be wrapped by DataAccessException so thati can write aop based handler to handle it without thing whether i am using hibernatejdbc.... -->
<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="ds">
<property value="${jdbc.drivername}" name="driverClassName"/>
<property value="${jdbc.url}" name="url"/>
<property value="${jdbc.username}" name="username"/>
<property value="${jdbc.password}" name="password"/>
</bean>
<bean class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" id="sf">
<property name="dataSource" ref="ds"/>
<property name="packagesToScan">
<list>
<value>com.bankapp.model.dao</value>
</list>
</property>
<property name="hibernateProperties">
<props>
<prop key="hibernate.hbm2ddl.auto">update</prop>
<prop key="hibernate.dialect">org.hibernate.dialect.MySQL57Dialect</prop>
<prop key="hibernate.show_sql">true</prop>
<prop key="hibernate.format_sql">true</prop>
</props>
</property>
</bean>
<bean class="org.springframework.orm.hibernate5.HibernateTransactionManager" id="tm">
<property name="sessionFactory" ref="sf"/>
</bean>
<tx:annotation-driven transaction-manager="tm"/>
</beans>
